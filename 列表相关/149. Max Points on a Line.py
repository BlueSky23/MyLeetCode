
# 注意python中的数字精度问题，round是四舍五入，decimal精度更高，fraction可以保存为分子/分母模式进而不会损失精度
from fractions import Fraction

class Solution:
    def maxPoints(self, points) -> int:
        if not points:
            return 0
        if len(points) == 1:
            return 1

        lines = {}
        # 以任意两个点构成的直线为键构造字典，最后统计点的个数
        for i in range(len(points)):
            x1, y1 = points[i]
            for j in range(i + 1, len(points)):
                x2, y2 = points[j]
                if x1 == x2:
                    a = 'inf'
                    b = x1
                else:
                    a = Fraction((y2 - y1), (x2 - x1))
                    b = y1 - a * x1
                if (a, b) in lines:
                    lines[(a, b)].append((i, x1, y1))
                    lines[(a, b)].append((j, x2, y2))
                else:
                    lines[(a, b)] = [(i, x1, y1), (j, x2, y2)]

        sorts = sorted(lines, key=lambda x: len(set(lines[x])), reverse=True)
        return len(set(lines[sorts[0]]))


s = Solution()
points = [[560, 248], [0, 16], [30, 250], [950, 187], [630, 277], [950, 187], [-212, -268], [-287, -222], [53, 37],
          [-280, -100], [-1, -14], [-5, 4], [-35, -387], [-95, 11], [-70, -13], [-700, -274], [-95, 11], [-2, -33],
          [3, 62], [-4, -47], [106, 98], [-7, -65], [-8, -71], [-8, -147], [5, 5], [-5, -90], [-420, -158],
          [-420, -158], [-350, -129], [-475, -53], [-4, -47], [-380, -37], [0, -24], [35, 299], [-8, -71], [-2, -6],
          [8, 25], [6, 13], [-106, -146], [53, 37], [-7, -128], [-5, -1], [-318, -390], [-15, -191], [-665, -85],
          [318, 342], [7, 138], [-570, -69], [-9, -4], [0, -9], [1, -7], [-51, 23], [4, 1], [-7, 5], [-280, -100],
          [700, 306], [0, -23], [-7, -4], [-246, -184], [350, 161], [-424, -512], [35, 299], [0, -24], [-140, -42],
          [-760, -101], [-9, -9], [140, 74], [-285, -21], [-350, -129], [-6, 9], [-630, -245], [700, 306], [1, -17],
          [0, 16], [-70, -13], [1, 24], [-328, -260], [-34, 26], [7, -5], [-371, -451], [-570, -69], [0, 27], [-7, -65],
          [-9, -166], [-475, -53], [-68, 20], [210, 103], [700, 306], [7, -6], [-3, -52], [-106, -146], [560, 248],
          [10, 6], [6, 119], [0, 2], [-41, 6], [7, 19], [30, 250]]
print(s.maxPoints(points))
